# Use Debian Bookworm as the base image for both build and runtime
FROM debian:bookworm-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    nodejs \
    npm \
    python3 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Install Rust using rustup
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Set the working directory in the container
WORKDIR /usr/src/app

# Copy the entire repo
COPY . .

# Build the Rust project
RUN cargo build --release

# Install npm dependencies for node-runner
WORKDIR /usr/src/app/node-runner
RUN npm install

# Create the final image
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    nodejs \
    npm \
    python3 \
    python3-pip \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && update-ca-certificates

# Copy the built executable from the builder stage
COPY --from=builder /usr/src/app/target/release/code-runner /usr/local/bin/code-runner

# Copy node-runner source and installed dependencies
COPY --from=builder /usr/src/app/node-runner /usr/src/app/node-runner

# Set the working directory
WORKDIR /usr/src/app

# Expose the port your Rust webserver will run on
EXPOSE 4000

# Command to run your application
CMD ["bash", "-c", "node /usr/src/app/node-runner/node-runner.js & code-runner"]

